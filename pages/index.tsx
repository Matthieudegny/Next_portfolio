import Link from "next/link";
import Image from "next/image";
import Head from "next/head";
import { motion, useInView } from "framer-motion";
import { useRouter } from "next/router";
import React, { useState, useRef, useEffect } from "react";
import { Element } from "react-scroll";
//components
import LayoutText from "../components/LayoutText";
import ArticleSkillsComponent from "@/components/ArticleSkillFrontEnd";
import ContainerLinkAnimated from "@/components/ContainerLinkAnimated";
import Footer from "@/components/Footer";

import {
  dataSkills,
  dataSkillsBackend,
  dataSkillsStructure,
  dataSkillsVersionning,
} from "@/utils/skillsData";

import { articleSkills } from "@/models/typesIndex";

export default function Home({
  mobilVersion,
  setHideNav,
}: {
  mobilVersion: boolean;
  setHideNav: Function;
}) {
  const router = useRouter();

  const refSkillsLines = useRef<HTMLInputElement>(null);
  const isInViewSkillstLines = useInView(refSkillsLines, { once: true });

  const refSkillsTexts = useRef<HTMLInputElement>(null);
  const isInViewSkillstTexts = useInView(refSkillsTexts, { once: true });

  const refSkillsTextsVersioning = useRef<HTMLInputElement>(null);
  const isInViewSkillstTextsVersioning = useInView(refSkillsTextsVersioning, {
    once: true,
  });

  const refSkillsTextsCurrentFocus = useRef<HTMLInputElement>(null);
  const isInViewSkillstTextsCurrentFocus = useInView(
    refSkillsTextsCurrentFocus,
    { once: true }
  );

  const refBottomPage = useRef<HTMLInputElement>(null);

  const isInViewBottomPage = useInView(refBottomPage, {
    amount: 0.8,
  });

  useEffect(() => {
    console.log("isInViewBottomPage: ", isInViewBottomPage);
    if (isInViewBottomPage) {
      setHideNav(true);
    } else {
      setHideNav(false);
    }
  }, [isInViewBottomPage]);

  const handleScrollToBottom = () => {
    console.log("refBottomPage.current: ", refBottomPage.current);
    refBottomPage.current.scrollIntoView({ behavior: "smooth" });
  };
  //write a function to console.log the scrollY position
  const [test, settest] = useState(0);
  const [test2, settest2] = useState(false);
  const handleScrollAnchor = (e: any) => {
    console.log("e.pageY: ", e.clientY);
    if (e.clientY > test) settest2(true);
    else {
      settest2(false);
    }

    settest(e.clientY);
    // if (isInViewSkillstTextsCurrentFocus) {
    //   handleScrollToBottom();
    // }
  };

  return (
    <motion.main
      animate={{ y: "0%" }}
      exit={{ opacity: 1 }}
      initial={{ y: "100%" }}
      transition={{
        duration: 0.75,
        ease: "easeOut",
      }}
      className="text-gray-900 fixed top-0 left-0 w-full h-screen bg-primary-color overflow-y-auto"
    >
      <Head>
        <title>PortFolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        onMouseMove={(e) => handleScrollAnchor(e)}
        className=" relative  min-h-screen w-screen flex flex-col justify-center bg-primary-color font-Montserrat_regular  sm:px-5rem xl:px-48  "
        style={{
          scrollSnapType: "y mandatory",
          overflowY: "scroll",
        }}
      >
        {test2 ? <h1>tttttttttttttttttesgggggggggggggg</h1> : ""}
        <button onClick={() => handleScrollToBottom()}>ttttttttttessss</button>
        <div className="h-screen flex flex-col justify-evenly">
          <div className="font-NotoSansGeorgian tracking-widest text-3xl w-full p-2 pr-16 sm:pr-0 md:text-5xl  xl:w-4/5 2xl:w-3/5  ">
            <LayoutText delay={0.5} timeAnimation={0.04}>
              Hello, I'm Matthieu, a front-end developer specialized, with
              modern technologies built around the Javascript framework.
            </LayoutText>
          </div>

          <div className="min-w-full p-2 font-Montserrat_thin pr-16 sm:pr-0  md:pl-20 xl:pl-40vw text-2xl md:text-4xl">
            <LayoutText delay={1.3} timeAnimation={0.03}>
              As a front-end developer with expertise in React, Next.js, and
              TypeScript, I'm passionate about crafting user-friendly interfaces
              that bring ideas to life.
            </LayoutText>
          </div>
        </div>

        <div className="2xl:h-90v mb-5">
          <div className="mb-5 mt-8 p-2 text-xl font-Montserrat_thin md:text-4xl sm:mb-0">
            <LayoutText delay={1.6} timeAnimation={0.03}>
              What i can bring to you:
            </LayoutText>
          </div>
          {dataSkills?.map((skill: articleSkills, index) => {
            return (
              <ArticleSkillsComponent
                key={index}
                title={skill.title}
                image={skill.image}
                text={skill.text}
                mobilVersion={mobilVersion}
              />
            );
          })}
        </div>

        <div
          ref={refSkillsTexts}
          className="relative w-full md:h-75v 2xl:h-60v flex flex-col md:flex-row "
        >
          {/* border top horyzontale */}
          <div
            className="absolute h-px md:w-full  top-0 left-0 bg-slate-400 z-50 scale-0"
            style={{
              transition: "all 0.5s cubic-bezier(0.17, 0.55, 0.55, 1) 0.2s",
              transformOrigin: "center",
              transform: isInViewSkillstTexts ? "scaleX(1)" : "scaleX(0)",
            }}
          ></div>
          <div
            className="relative h-full pt-4 pb-4 xl:pr-10 flex flex-col "
            style={{
              transform: isInViewSkillstTexts ? "none" : "translateX(-200px)",
              opacity: isInViewSkillstTexts ? 1 : 0,
              transition: "all 0.3s cubic-bezier(0.17, 0.55, 0.55, 1) 0.3s",
            }}
          >
            <h3>Back-end:</h3>
            <h4>
              API creation: Experienced in building scalable APIs using Node.js
              and Express.js, with RESTful API design principles and good
              practices.
            </h4>
            <h4>
              Database basics: Familiar with implementing database schemas and
              queries using SQL. Experienced in working with PostgreSQL,
              SupaBase and MongoDB.
            </h4>
            {/* border middle-bottom-left hozyzontale */}
            <div
              className="absolute  md:w-full h-px  bottom-0 left-0 bg-slate-400 z-50 transition-all duration-1000"
              style={{
                transition: "all 0.4s cubic-bezier(0.17, 0.55, 0.55, 1) 0.9s",
                transformOrigin: "right",
                transform: isInViewSkillstLines ? "scaleY(1)" : "scaleY(0)",
              }}
            ></div>
          </div>
          <div className="relative h-full">
            <div
              className="relative h-3/6  pt-4 pb-4 flex flex-col "
              style={{
                transform: isInViewSkillstTexts ? "none" : "translateX(200px)",
                opacity: isInViewSkillstTexts ? 1 : 0,
                transition: "all 0.3s cubic-bezier(0.17, 0.55, 0.55, 1) 0.3s",
              }}
            >
              <h3>Structure:</h3>
              <h4>
                Clean coding: Skilled in writing maintainable and scalable code
                using the MVC design pattern and TypeScript, ensuring code
                reliability and type safety.
              </h4>
              <h4>AGILE: Experienced in working in an AGILE environment.</h4>
            </div>
            <div
              className="relative h-3/6   pt-4 pb-4 flex flex-col "
              style={{
                transform: isInViewSkillstTextsVersioning
                  ? "none"
                  : "translateX(200px)",
                opacity: isInViewSkillstTextsVersioning ? 1 : 0,
                transition: "all 0.3s cubic-bezier(0.17, 0.55, 0.55, 1) 0.3s",
              }}
            >
              <h3 ref={refSkillsTextsVersioning}>Versioning:</h3>
              <h4>
                Experienced in using Git, GitHub, and Azue for version control,
                ensuring collaboration with team members and maintaining
                codebase integrity. Proficient in managing repositories,
                branches, and pull requests.
              </h4>
              {/* border middle hozyzontale */}
              <div
                className="absolute  md:h-px  top-0 left-0 bg-slate-400 z-50 transition-all duration-1000"
                style={{
                  transition:
                    "all 0.75s cubic-bezier(0.17, 0.55, 0.55, 1) 0.45s",

                  width: isInViewSkillstLines ? "100%" : "0%",
                }}
              ></div>
            </div>
            {/* border middle vertical */}
            <div
              ref={refSkillsLines}
              className="absolute w-px md:h-full  bottom-0 left-0 bg-slate-400 z-50 transition-all duration-1000"
              style={{
                transition: "all 0.7s cubic-bezier(0.17, 0.55, 0.55, 1) 0.2s",
                transformOrigin: "top",
                transform: isInViewSkillstLines ? "scaleY(1)" : "scaleY(0)",
              }}
            ></div>
            {/* border middle-bottom-right horyzontal */}
            <div
              ref={refSkillsLines}
              className="absolute md:w-full h-px bottom-0 left-0 bg-slate-400 transition-all duration-1000"
              style={{
                transition: "all 0.4s cubic-bezier(0.17, 0.55, 0.55, 1) 0.9s",
                transformOrigin: "left",
                transform: isInViewSkillstLines ? "scaleY(1)" : "scaleY(0)",
              }}
            ></div>
          </div>
        </div>

        <div
          className="relative md:pt-5 mb-32 pb-5"
          style={{
            transform: isInViewSkillstTextsCurrentFocus
              ? "none"
              : "translateY(200px)",
            opacity: isInViewSkillstTextsCurrentFocus ? 1 : 0,
            transition: "all 0.3s cubic-bezier(0.17, 0.55, 0.55, 1) 0.3s",
          }}
        >
          <h3 ref={refSkillsTextsCurrentFocus} className="xl:text-center">
            Current Focus:
          </h3>
          <h4>
            Working on improving my skills in Continuous Integration and
            Deployment (CI/CD) by learning Docker and how to use it to create
            and manage containers for various applications.
          </h4>
          <h4>Unit testing with the Jest library.</h4>
          {/* border bottom-left vertical */}
          <div
            ref={refSkillsLines}
            className="absolute w-px md:h-full  bottom-0 left-0 bg-slate-400 z-50 transition-all duration-1000"
            style={{
              transition: "all 0.4s cubic-bezier(0.17, 0.55, 0.55, 1) 1.3s",
              transformOrigin: "top",
              transform: isInViewSkillstLines ? "scaleY(1)" : "scaleY(0)",
            }}
          ></div>
          {/* border bottom-right vertical */}
          <div
            ref={refSkillsLines}
            className="absolute w-px md:h-full  bottom-0 right-0 bg-slate-400 z-50 transition-all duration-1000"
            style={{
              transition: "all 0.4s cubic-bezier(0.17, 0.55, 0.55, 1) 1.3s",
              transformOrigin: "top",
              transform: isInViewSkillstLines ? "scaleY(1)" : "scaleY(0)",
            }}
          ></div>
        </div>

        <div className="mt-32 mb-52" ref={refBottomPage}>
          <ContainerLinkAnimated
            title={"Projects / works"}
            linkImage={"/wave.png"}
            index={1}
          />
          <ContainerLinkAnimated
            title={"Contact"}
            linkImage={"/bubble.png"}
            index={2}
          />
        </div>

        <Footer />
        <div>.</div>
      </main>
    </motion.main>
  );
}
